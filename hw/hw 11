#include <iostream>
#include <algorithm>

void separate_and_merge(int* arr, int size) {
    // Create two pointers to keep track of the negative and positive elements
    int* neg_ptr = arr;
    int* pos_ptr = arr + size - 1;

    // Loop through the array
    for (int i = 0; i < size; i++) {
        // If the element is negative, swap it with the negative pointer
        if (arr[i] < 0) {
            std::swap(arr[i], *neg_ptr);
            neg_ptr++;
        }
        // If the element is positive, swap it with the positive pointer
        else {
            std::swap(arr[i], *pos_ptr);
            pos_ptr--;
        }
    }
}

int main() {
    // Test the function with three different arrays
    int arr1[] = {-1, 2, -3, 4, -5};
    separate_and_merge(arr1, 5);
    std::cout << "Array 1: ";
    for (int i = 0; i < 5; i++) {
        std::cout << arr1[i] << " ";
    }
    std::cout << std::endl;

    int arr2[] = {-6, -7, 8, 9, -10};
    separate_and_merge(arr2, 5);
    std::cout << "Array 2: ";
    for (int i = 0; i < 5; i++) {
        std::cout << arr2[i] << " ";
    }
    std::cout << std::endl;

    int arr3[] = {11, 12, -13, -14, 15};
    separate_and_merge(arr3, 5);
    std::cout << "Array 3: ";
    for (int i = 0; i < 5; i++) {
        std::cout << arr3[i] << " ";
    }
    std::cout << std::endl;

    return 0;
}